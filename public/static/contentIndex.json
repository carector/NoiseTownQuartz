{"Notes/Car-game-cinematics":{"title":"Car game cinematics","links":[],"tags":[],"content":"Goal\n\nGet better at modeling environments and mimicking PS1 look\nIllustrate a story split across several characters, maybe told out of sequence\n\nInspiration: 100 Bullets, new guy every issue who has some connection to past events\n\n\nShow off music I like from smaller artists\n5 to 10 quick 30-45 second animations\nAdult Swim bumpers on steroids\nInteractive website\n\nWeb app showing an overhead map view of the city with different location pinpoints\nClicking one will play the animation for that area\n\n\n\nThe city\n\nEach animation or bump takes place at some location in the same big city\nAfter enough animations people should be able to stitch together what happens and where\n\nMap first pass\n\nLook / feel\n\nGrungy city\nGross yellow sky\n\nHazy yellow-orange color palette in general, almost sepia\n\n\nMostly car stuff\nLeans into noir sometimes\nUse of heavily processed photographs for background elements + textures\nPhase 1 Gorillaz\n100 Bullets\n\nMusic\n\nVary per character / faction / part of story?\nCategories\n\nDisgusting gritty hip hop instrumentals\n\nBuck 65\nRed Ants\n\n\n\nVery early-2000s techno / KMFDM industrial shit\n\n\n\nSTART SMALL - do one or two\nWould like to try prioritizing lesser known songs (support soundcloud artists + avoid copyright strikes)\nPotential music\nBest:\n\nSomething by Red Ants, probably something off Phobos Deimos\nskunk (comin thru) + EVILSHIT2alt www.youtube.com/watch\nRiverbed part 6 www.youtube.com/watch\nLeft Hand Suzuki Method youtu.be/KDg7TnURT-A\nHand Clapper youtu.be/I738c-h0djI\n\n\nBlackrain www.youtube.com/watch\nhelp (www.youtube.com/watch)\nThe End of Biters www.youtube.com/watch\n8 Point Agenda youtu.be/S5tDDNulWNI\nBasic Instinct youtu.be/JXeJA2i-Lck or Discipline 99 youtu.be/sXtrsUXPr74\n\n\nOthers:\n\nThe Messenger (2:13) www.youtube.com/watch\nDrive - 1:23 - 1:50 (youtu.be/dVEBTXf-gk4)\nExoworld - 13:45 - (www.youtube.com/watch)\nDark Jungle - 1:17 - 1:52 (www.youtube.com/watch)\nSapos (soundcloud.com/henry-music-and-stuff/sapos-1)\nOur Queens (One is many, many are one) www.youtube.com/watch\nAin’t Got Nothin by Supreme Beings of Leisure www.youtube.com/watch\nLost in Marrakesh (Hugo Kant Remix) www.youtube.com/watch\nDemdike Stare - The Call (7:12) youtu.be/i—eYZD2Yr8?si=aOfFV7DdGNyAU7vP&amp;t=432\n"},"Notes/Clone-rewind-game":{"title":"Clone rewind game","links":[],"tags":[],"content":""},"Notes/Gizmo-debug-utility-script":{"title":"Gizmo debug utility script","links":[],"tags":[],"content":"\n\nAdd more intuitive debug gizmos for functions like boxcast / circlecast / raycast\n\n\nCreate script that performs raycast functions and draws the debug info in the same frame\n\n\nCould include:\n\nPhysics.raycast/boxcast/spherecast/capsulecast - draw shapes at start and end, draw lines connecting\n\ndraw additional box when overlap/hit occurs?\n\n\nOverlapBox / OverlapSphere - indicate where hits occur\n\n\n\nWhat builtin unity stuff could use more visual feedback?\n\n"},"Notes/Intro-to-IoT":{"title":"Intro to IoT","links":[],"tags":[],"content":"IoT\nAny reference books?\n\n21 IoT Experiments - labs are all based on this\n\n15 bucks on kindle\n\n\nRaspberry Pi IoT Projects: Prototyping experiments for makers\n\nAdditional reference book\n\n\n\nIoT Labs\n\nGonna have to look at the powerpoint\n\nHardware requirements\n\nRaspberry Pi 3 B+ (or 4)\nUSB keyboard and mouse\nHDMI monitor\n\nTools that might also be nice to have\n\nAdafruit Ladyada’s Electronics Toolkit - soldering kit with heating/connecting wires\n\nMore available on syllabus\n\n\n\nSyllabus again\n\nSeems to focus on pretty basic arduino stuff - kind of a retread of hardware course from last year until later down the line\n\nIntro to IoT\n\nThe presence of IoT in today’s world\n\nIoT: Term for extension of existing internet structure to billions of connected devices\nIoT is all around us\nIoT helps improve quality of life\nIoT system is usually made up of:\n\nControllers\nSensors\nActuators - influence the environment\nHardware\nSoftware\nIoT process flow\nA simple IoT system includes sensors connecting to actuators or controllers\nThru wireless or wired connection\n\n\n\n\n\nBuilding blocks of an IoT system\n\nControllers (RasPi and Arduino)\n\nResponsible for collecting data from sensors\nHave ability to make immediate decisions\nAdds intelligence to things\nMay send data to remote computers\nContinuously analyzes and processes information\nUses actuators to modify conditions\n\n\nActuators\n\nPerforms an action\nBasic motor that can be used to control a system\nHydraulic, electric, or pneumatic\nResponsible for transforming electrical signal into physical output\n\n\nSensors\n\nDevice used to monitor and measure a physical property\nMay be connected to controller either directly or remotely\n\n\n\nProcesses in controlled systems\n\nProcesses\n\nSeries of steps or actions taken to achieve a desired result\nUses inputs to execute required actions\n\n\nFeedback\n\nWhen the output of a process affects the input\nReferred to as feedback loop\nCan provide positive or negative real-time information to controller based on behavior\nExamples\n\nNegative feedback: Shut off AC when temperature is low\nPositive feedback: Turn on AC when temperature is high\n\n\n\n\n\nControl systems\n\n\nThree components of a control system\n\nController: Uses inputs and outputs to manage behavior of system\n\nAttempts to achieve a desired state\n\n\nPlant: The controlled portion of the system\nSensor: Measure a physical property\n\n\n\nControl theory: Choosing the adjustments to apply to a plant to achieve a desired output\n\nApplied to many systems\n\nDriving a car\nHome automaton\nHome security\nHome thermostat\n\n\nCar example\n\nInput\n\nSpeed, direction, proximity to other cars\n\n\nAction\n\nAccelerate, brake, steer\n\n\nOutput\n\nControl speed, direction, and proximity to other cars\n\n\n\n\n\n\n\nClosed-loop control systems\n\nUses feedback to determine whether the collected output is the desired output\nNaming conventions come from circuit naming conventions so it’s not always accurate\n\n\n\nModels of communication\n\nLayered networking models are used to illustrate how a network operates and model how devices communicate\nBenefits include:\n\nAssists in protocol design\nFosters competition\nDecouples layers, prevents changes in one layer from impacting others\nProvides common language to describe network functions and capabilities\n\n\nPhysical, data link, and network layers: Concepts that are used to illustrate how network communication operates\n\nTCP and UDP - standard transfer protocols\nTCP is connection oriented, UTP is user oriented (non-connection oriented. send packet, pick a god and pray)\n\n\n\nTCP/IP protocol suite and communication\n\n\nApplication layer\n\nName system, host config, email, file transfer, web\n\n\n\nTransport layer\n\nUDP and TCP\n\n\n\nInternet layer\n\nIP, IP support, routing protocols\n\n\n\nNetwork access layer\n\nPPP, ethernet, interface drivers\n\n\n\nFor our purposes: We care about application and transport layer\n\n"},"Notes/MTG-tracker":{"title":"MTG tracker","links":[],"tags":[],"content":"Goals\n\nCreate portfolio piece that isn’t a videogame\nSet up an easy way to display the view of the current player\n\nTools\n\nScryfall API for getting card data\nDiscord bot API - hook into webcams in VC?\n\nReferences\n\nSpelltable by WoTC - does basically everything I thought up for this project\n"},"Notes/Noir-point-and-click-adventure":{"title":"Noir point-and-click adventure","links":[],"tags":[],"content":"Gameplay\n\nPoint and click puzzle game inspired by lucasarts games and Another World\nTwo main parts to the gameplay\n\nEscape room style point-and-click puzzle stuff\n\nTake in only a few rooms at a time\nInventory system, drag-drop-combine items to solve puzzles\n\n\nQuicktime button input escape sequences\n\nUsed to bookend puzzle sequences to keep player engaged\nSimilar to dragon’s lair: Player needs to react quickly and moves through rooms pretty fast\n\nKeyboard input instead of mouse - single button (space)? or arrow keys\n\n\nProbably the most demanding in terms of art - still should take place against static backgrounds, but will feel more like watching an action sequence play out\n\n\n\n\n\nSetting and mood\n\nSetting inspirations\n\nDark City\n\n\n\nVisual style\n\nLow resolution, 1-bit black and white graphics\n\n256x192 upscaled 2x to 512x384\n\n\nNegative space and shadows to create optical illusions of sorts\nVisual inspirations\n\nSin City\nCalvin and Hobbes Tracer Bullet strips\nSamurai Jack ninja episode + that one season 5 opening shot\n\n\n\nAudio\n\nNo music whatsoever (unless a very particular case arises)\nDriven by soundscapes, consider looking at FMOD\n"},"Notes/OBLITERATOR":{"title":"OBLITERATOR","links":[],"tags":[],"content":"(Volume warning)\n\nOVERVIEW\n\n\nTop-down design (world and lore drive gameplay)\n\n\nSet in an endless maze of gothic architecture and crushing religious weight\n\n\nThe player is practically microscopic compared to the scale of the rest of the world\n\n\nPlayer exists an infinite number of levels into the fractal, and could potentially go down an infinite number more\n\n\nSETTING REFERENCES\nGothic architectural 3D fractals\n\n\n\n\nENEMY / CHARACTER REFERENCES\n\n"},"Notes/node/Klondike-solitaire":{"title":"Klondike solitaire","links":[],"tags":[],"content":"\nUse three.js for visual side of things\nGet list of rules and make sure they can be satisfied\nLogic should be pretty easy\n\nCan only stack on top of card if that card’s value = this card’s value + 1\nKing/Queen/Jack/Ace can just have numerical value\nOnly special behavior\n\nKing: Can move to place in empty columns\nAce: Can move to foundation slots\n\n\n\n\nMore difficult things\n\nDetermining if no more moves can be made (not strictly needed)\n\n\n\nwww.solitairecentral.com/rules/Klondike.html"},"Notes/node/three.js-notes":{"title":"three.js notes","links":[],"tags":[],"content":"Vite\n\n\nBuild tool for optimizing + caching + running local server\n\n\nCan add plugins to handle features - GLSL and React\n\nReact Three Fiber\n\n\n\nLaunch command:\n\ncd src\nnpx vite\n\n\n"},"Notes/stuffiwannado":{"title":"stuffiwannado","links":[],"tags":[],"content":"Things I want to do and learn, sorted by priority\nProgramming\n\n\nJavascript\n\nNode\n\nAny kind of backend-heavy projects\nFrontend-only firebase projects\nAnything that can serve as portfolio pieces\n\n\nthree.js\n\nWeird 3D projects, especially web-based game dev\nDemoscene-like experiments\n\n\nThis website\n\nMore custom subdomains for weird experiments\n\n\n\n\n\nGeneral problem solving skills\n\nLeetcode\nUnit test writing\nAWS / cloud knowledge\n\n\n\nUnity / game dev\n\nBuild reusable tools + custom editor things + unity packages\nMake more tools that are modular / can be reused in new projects without issue\nTemplates + design patterns for common assets\n.mod / tracker music file reader\n\n\n\nHardware projects\n\nDaisy seed + Arduino programming\n\n\n\nBlender\n\nUV mapping + optimized textures\n\n256fes challenge (256x256 texture, 256 tris)\n\n\nEnvironment props\nDifferent tools + where to properly use them\nAnimations\n\nOrganize multiple scenes\nLearn best practices for multi-scene / multi-shot projects\nStoryboarding\n\n\nEnvironments\n\nLighting and rendering still frames\nBest practices for topology\n\n\n\nOrganization\n\nUse calendar / planner more to space out shit I wanna work on\nGame dev: Get better at figuring things out up front\n\nSmaller projects\nTight design docs\nEliminate scope creep\nStick to schedule - Finish and SELL projects\n\n\n\nAudio\n\nSound and ambience\n\nRecord and process more foley\nFMOD - dynamic soundscape design\n\n\nMusic\n\nGet better at working with limitations\n\nTracker music + custom sample libraries\nUse hardware more\nImpose channel limits\n\n\nPlay real instruments\n\nMore bass + piano practice\n\n\n\n\n\nReading\n\nFinish more books (non-graphic novel)\n"},"Projects/Blockade-Runner":{"title":"Blockade Runner","links":[],"tags":["completed","unity"],"content":"Blockade Runner was a submission to Newgrounds’ List Jam and was developed over a weekend. Originally I wasn’t really interested in participating, but then…\n\nThe main theme of the game was made in one sitting on the first day of the jam - but it wasn’t made with the jam in mind! It ended up being such an inspiration that the rest of the game came into being solely so I could have something cool to showcase the track with.\nThe single-button controls made it easy to create new mechanics without having to worry about the player having the freedom to break things.\nHere’s a zoomed out view of the game’s main level.\n\nI always wanted to do a follow-up project sometime down the line given how quickly the first one came together, but other things always took priority. A mobile game seemed like a pretty obvious fit, and I took plenty of notes about where a sequel could go. Maybe someday…\nI’m also sitting on roughly a full album of completed songs for a soundtrack. Here’s a couple of them:\n\n\n\nYou can play the game here."},"Projects/autominer":{"title":"Club Penguin autominer","links":[],"tags":["completed","unity"],"content":"This is serious. Don’t tell anyone I did this. It isn’t legal. Someone might call the police.\nAfter Club Penguin shut down in 2017, the fanmade revival Club Penguin Rewritten took its place (until Disney issued a cease-and-decist in 2021). I spent a lot of time messing around on the site just to reminisce, but I didn’t really have it in me to grind out thousands of coins in a defunct kids’ game from the late 2000’s.\nSo I did what anyone would do: I spent about 2 hours making a program that could take advantage of the game’s most lucrative minigame: The underground mine. Unlike other minigames on Club Penguin, you could earn coins in the mine just by wearing a miner’s hat and digging at different locations in the room. After about five to ten seconds you’d be rewarded with a bit of pocket change. While the process was mind-numbing if you kept at it for long enough, it was by far the quickest way to generate an obscene amount of moolah.\nAnd that’s exactly what the program did. Using advanced screen-scraping technology, I was able to automate the grueling process of digging, waiting, and finding a new spot.\nIt was beautiful. When I went out every Friday or Saturday night I would leave the program idling for the better part of 6 hours. My account never timed out because the mouse cursor was right there, moving around and mimicking all the hard work that a normal, honest player would do. On a good night I would net somewhere between 100,000 and 150,000 coins. Within a month I was a millionaire.\nBut day-to-day life in a game like Club Penguin quickly becomes meaningless once you accrue this much wealth. I felt as though my actions were having a net negative effect on the global Club Penguin economy, and I became too wracked with guilt to keep it up. My onslaught ended at around 1,500,000 coins, an amount I wouldn’t be able to fully spend if I tried (I mean, I definitely COULD have, but I liked having a big number on my player card more).\nWith the game now defunct, I have no way to capture any more footage of the autominer in action. I’ll leave you with the only recording I ever took.\n"},"Projects/cargame":{"title":"Car Game","links":["Notes/Car-game-cinematics"],"tags":["unfinished","unity"],"content":"\nMuch more successful attempt at online multiplayer. Players were able to join games, shoot each other, drive cars together without issue and run each other over. Unfortunately didn’t go much further than that due to the million other issues matchmaking issues that come with online games. I could probably succeed now, but I think the intro cinematic was the most interesting part of the whole thing. I’ve thought a lot about revisiting that aspect of the project. (Car game cinematics)\n\nHUD artwork created by the wonderful hairyballbastic\n\n"},"Projects/procgen1":{"title":"Procedurally generated levels","links":[],"tags":["experiment","unity"],"content":"My first attempt at generating dungeon-like levels. Most of my work was based on this video with a few changes.\n\nProcedure\nIn the inspector I manually sort each room into separate lists based on the number of exits they each have.\nHere are the steps performed each time a new level is generated:\n\nPlace random points within a certain radius. The number of points determines how many rooms the level will have.\nGenerate a Delaunay triangulation from the points.\nUse the edges of the triangle to generate a minimum spanning tree.\nRandomly add in edges to create loops between rooms. For simplicity, the number of edges connected to a single node shouldn’t exceed 4.\nFor each node of the MST, determine how many edges are connected to it. This is done so we can find rooms from our pool that have a matching number of exits.\nRandomly choose and generate a room for each node of the MST. When a room is generated, a bounding box is also created so that subsequent rooms can avoid overlapping with existing ones. If a room would overlap, add a random offset and repeat until the room can be placed.\nFor each exit of each room, use A* pathfinding to find the shortest path to a connected room. Pipes are drawn at each point of the path using rule tiles.\n"},"Projects/slamma":{"title":"The Slamma","links":[],"tags":["unity","unfinished"],"content":"Based on a super short game I made for a five-hour game jam. Here’s what the original looked like:\n\nI spent the next couple months occasionally coming back to it to make more levels.\n\n\nMy buddy Klester made the textures for this car. Unfortunately I lost the model along with another big chunk of progress when I deleted the wrong folder while switching computers.\n\nThe game is basically done, but needs more levels to really shine. Losing the most recent version of the game demotivated me for a while. I’m tempted to just release it as-is, because everything(?) works right now."},"Tutorials/fltips1":{"title":"FL recommendations","links":[],"tags":["tutorial","music"],"content":"Killer free plugins\n\nSynth1: Free and with a huge number of presets available. I don’t mess with this one enough but I know people who use it religiously\nWider: 1-knob stereo enhancer for lazy people (me)\nDVS Saxophone: Don’t.\n"},"index":{"title":"Welcome","links":["Projects","Tutorials"],"tags":[],"content":"You’ve entered my extra-special subdomain. I haven’t posted this link anywhere yet and it isn’t hooked up to my noise.town domain either, so congratulations if you somehow made it here.\nHere you’ll find behind the scenes looks at projects I’m working on (and have worked on). I hope to write a few tutorial posts to shed some light on various programming and music tricks I’ve learned over the years."}}