{"Notes/Intro-to-IoT":{"title":"Intro to IoT","links":[],"tags":[],"content":"IoT\nAny reference books?\n\n21 IoT Experiments - labs are all based on this\n\n15 bucks on kindle\n\n\nRaspberry Pi IoT Projects: Prototyping experiments for makers\n\nAdditional reference book\n\n\n\nIoT Labs\n\nGonna have to look at the powerpoint\n\nHardware requirements\n\nRaspberry Pi 3 B+ (or 4)\nUSB keyboard and mouse\nHDMI monitor\n\nTools that might also be nice to have\n\nAdafruit Ladyada’s Electronics Toolkit - soldering kit with heating/connecting wires\n\nMore available on syllabus\n\n\n\nSyllabus again\n\nSeems to focus on pretty basic arduino stuff - kind of a retread of hardware course from last year until later down the line\n\nIntro to IoT\n\nThe presence of IoT in today’s world\n\nIoT: Term for extension of existing internet structure to billions of connected devices\nIoT is all around us\nIoT helps improve quality of life\nIoT system is usually made up of:\n\nControllers\nSensors\nActuators - influence the environment\nHardware\nSoftware\nIoT process flow\nA simple IoT system includes sensors connecting to actuators or controllers\nThru wireless or wired connection\n\n\n\n\n\nBuilding blocks of an IoT system\n\nControllers (RasPi and Arduino)\n\nResponsible for collecting data from sensors\nHave ability to make immediate decisions\nAdds intelligence to things\nMay send data to remote computers\nContinuously analyzes and processes information\nUses actuators to modify conditions\n\n\nActuators\n\nPerforms an action\nBasic motor that can be used to control a system\nHydraulic, electric, or pneumatic\nResponsible for transforming electrical signal into physical output\n\n\nSensors\n\nDevice used to monitor and measure a physical property\nMay be connected to controller either directly or remotely\n\n\n\nProcesses in controlled systems\n\nProcesses\n\nSeries of steps or actions taken to achieve a desired result\nUses inputs to execute required actions\n\n\nFeedback\n\nWhen the output of a process affects the input\nReferred to as feedback loop\nCan provide positive or negative real-time information to controller based on behavior\nExamples\n\nNegative feedback: Shut off AC when temperature is low\nPositive feedback: Turn on AC when temperature is high\n\n\n\n\n\nControl systems\n\n\nThree components of a control system\n\nController: Uses inputs and outputs to manage behavior of system\n\nAttempts to achieve a desired state\n\n\nPlant: The controlled portion of the system\nSensor: Measure a physical property\n\n\n\nControl theory: Choosing the adjustments to apply to a plant to achieve a desired output\n\nApplied to many systems\n\nDriving a car\nHome automaton\nHome security\nHome thermostat\n\n\nCar example\n\nInput\n\nSpeed, direction, proximity to other cars\n\n\nAction\n\nAccelerate, brake, steer\n\n\nOutput\n\nControl speed, direction, and proximity to other cars\n\n\n\n\n\n\n\nClosed-loop control systems\n\nUses feedback to determine whether the collected output is the desired output\nNaming conventions come from circuit naming conventions so it’s not always accurate\n\n\n\nModels of communication\n\nLayered networking models are used to illustrate how a network operates and model how devices communicate\nBenefits include:\n\nAssists in protocol design\nFosters competition\nDecouples layers, prevents changes in one layer from impacting others\nProvides common language to describe network functions and capabilities\n\n\nPhysical, data link, and network layers: Concepts that are used to illustrate how network communication operates\n\nTCP and UDP - standard transfer protocols\nTCP is connection oriented, UTP is user oriented (non-connection oriented. send packet, pick a god and pray)\n\n\n\nTCP/IP protocol suite and communication\n\n\nApplication layer\n\nName system, host config, email, file transfer, web\n\n\n\nTransport layer\n\nUDP and TCP\n\n\n\nInternet layer\n\nIP, IP support, routing protocols\n\n\n\nNetwork access layer\n\nPPP, ethernet, interface drivers\n\n\n\nFor our purposes: We care about application and transport layer\n\n"},"Notes/OBLITERATOR":{"title":"OBLITERATOR","links":[],"tags":[],"content":"(Volume warning)\n\nOVERVIEW\n\n\nTop-down design (world and lore drive gameplay)\n\n\nSet in an endless maze of gothic architecture and crushing religious weight\n\n\nThe player is practically microscopic compared to the scale of the rest of the world\n\n\nPlayer exists an infinite number of levels into the fractal, and could potentially go down an infinite number more\n\n\nSETTING REFERENCES\nGothic architectural 3D fractals\n\n\n\n\nENEMY / CHARACTER REFERENCES\n\n"},"Projects/Blockade-Runner":{"title":"Blockade Runner","links":[],"tags":["completed","unity"],"content":"Blockade Runner was a submission to Newgrounds’ List Jam and was developed over a weekend. Originally I wasn’t really interested in participating, but then…\n\nThe main theme of the game was made in one sitting on the first day of the jam - but it wasn’t made with the jam in mind! It ended up being such an inspiration that the rest of the game came into being solely so I could have something cool to showcase the track with.\nThe single-button controls made it easy to create new mechanics without having to worry about the player having the freedom to break things.\nHere’s a zoomed out view of the game’s main level.\n\nI always wanted to do a follow-up project sometime down the line given how quickly the first one came together, but other things always took priority. A mobile game seemed like a pretty obvious fit, and I took plenty of notes about where a sequel could go. Maybe someday…\nI’m also sitting on roughly a full album of completed songs for a soundtrack. Here’s a couple of them:\n\n\nYou can play the game here."},"Projects/album1":{"title":"Funeral","links":[],"tags":["completed","music"],"content":""},"Projects/procgen1":{"title":"Procedurally generated levels","links":[],"tags":["experiment","unity"],"content":"My first attempt at generating dungeon-like levels. Most of my work was based on this video with a few changes.\n\nProcedure\nIn the inspector I manually sort each room into separate lists based on the number of exits they each have.\nHere are the steps performed each time a new level is generated:\n\nPlace random points within a certain radius. The number of points determines how many rooms the level will have.\nGenerate a Delaunay triangulation from the points.\nUse the edges of the triangle to generate a minimum spanning tree.\nRandomly add in edges to create loops between rooms. For simplicity, the number of edges connected to a single node shouldn’t exceed 4.\nFor each node of the MST, determine how many edges are connected to it. This is done so we can find rooms from our pool that have a matching number of exits.\nRandomly choose and generate a room for each node of the MST. When a room is generated, a bounding box is also created so that subsequent rooms can avoid overlapping with existing ones. If a room would overlap, add a random offset and repeat until the room can be placed.\nFor each exit of each room, use A* pathfinding to find the shortest path to a connected room. Pipes are drawn at each point of the path using rule tiles.\n"},"Tutorials/fltips1":{"title":"FL Tips (1)","links":[],"tags":[],"content":"Killer free plugins\n\nSynth1: Free and with a huge number of presets available. I don’t use this one too much but I know people who use it religiously\nWider: 1-knob stereo enhancer.\n\nDVS Saxophone: Don’t\n"},"index":{"title":"Welcome","links":["Notes","Projects/Blockade-Runner"],"tags":[],"content":"You’ve entered my extra-special subdomain. Here you’ll find behind the scenes looks at various solo projects I’m working on (and have worked on). I hope to write a few tutorial posts to shed some light on various programming and music tricks I’ve learned over the years.\nI also maintain a notebook here where I publish my thoughts and random ideas for future projects. Don’t even think about stealing them unless you can really knock it out of the park.\nNoteworthy projects\n\nBlockade Runner. Made in 2021 over the span of two days. A love letter to stick figure flash games. Ridiculous return on investment in terms of Newgrounds page views.\n"}}